{"version":3,"sources":["components/layout/Footer.js","components/Dashboard.js","components/layout/Header.js","components/layout/Menu.js","components/common/Sweetalert/SweetAlert.js","services/UserService.js","components/Users/UserForm.js","components/Users/UserHome.js","App.js","index.js"],"names":["Footer","Component","className","href","Header","data-widget","Menu","src","alt","style","opacity","role","data-accordion","to","MySwal","withReactContent","Swal","mixin","toast","position","showConfirmButton","timer","ApiUrl","options","headers","url","Save","data","axios","post","JSON","stringify","then","res","error","checkUserid","Userid","get","params","GetAllUsers","required","maxLength","errorMessage","UserForm","useState","isValidUser","SetIsValidUser","useForm","register","handleSubmit","reset","watch","setFocus","setError","clearErrors","getValues","formState","errors","onSubmit","isValid","isDirty","a","console","warn","UserService","result","status","ResetForm","log","fire","checkUser","e","_Userid","target","value","Passwordref","useRef","current","useEffect","for","type","placeholder","onChange","Password","minLength","FullName","ContactNo","ConfirmPassword","validate","skip","message","Email","Country","class","onClick","UserHome","users","setUsers","x","fetchData","width","map","user","userid","email","fullName","contactNo","country","whiteSpace","id","disabled","isDeleting","colSpan","length","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e4a6720.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer className=\"main-footer\">\r\n                    <strong>\r\n                        Copyright Â© 2014-2019 <a href=\"http://adminlte.io\">AdminLTE.io</a>.\r\n          </strong>\r\n          All rights reserved.\r\n          <div className=\"float-right d-none d-sm-inline-block\">\r\n                        <b>Version</b> 3.0.0\r\n          </div>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-wrapper\">\r\n                    {/* Content Header (Page header) */}\r\n                    <div className=\"content-header\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row mb-2\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <h1 className=\"m-0 text-dark\">Dashboard</h1>\r\n                                </div>{/* /.col */}\r\n                                <div className=\"col-sm-6\">\r\n                                    <ol className=\"breadcrumb float-sm-right\">\r\n                                        <li className=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\r\n                                        <li className=\"breadcrumb-item active\">Dashboard v1</li>\r\n                                    </ol>\r\n                                </div>{/* /.col */}\r\n                            </div>{/* /.row */}\r\n                        </div>{/* /.container-fluid */}\r\n                    </div>\r\n                    {/* /.content-header */}\r\n                    {/* Main content */}\r\n                    <section className=\"content\">\r\n                        <div className=\"container-fluid\">\r\n\r\n                        </div>{/* /.container-fluid */}\r\n                    </section>\r\n                    {/* /.content */}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n                    {/* Left navbar links */}\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\">\r\n                                <i className=\"fas fa-bars\" />\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"nav-item d-none d-sm-inline-block\">\r\n                            <a href=\"./\" className=\"nav-link\">\r\n                                Home\r\n              </a>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default class Menu extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n                    {/* Brand Logo */}\r\n                    <a href=\"index3.html\" className=\"brand-link\">\r\n                        <img\r\n                            src=\"dist/img/AdminLTELogo.png\"\r\n                            alt=\"AdminLTE Logo\"\r\n                            className=\"brand-image img-circle elevation-3\"\r\n                            style={{ opacity: '.8' }}\r\n                        />\r\n                        <span className=\"brand-text font-weight-light\">AdminLTE 3</span>\r\n                    </a>\r\n                    {/* Sidebar */}\r\n                    <div className=\"sidebar\">\r\n                        {/* Sidebar user panel (optional) */}\r\n                        {/* <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n                            <div className=\"image\">\r\n                                <img\r\n                                    src=\"dist/img/user2-160x160.jpg\"\r\n                                    className=\"img-circle elevation-2\"\r\n                                    alt=\"User Image\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"info\">\r\n                                <a href=\"#\" className=\"d-block\">\r\n                                    Alexander Pierce\r\n                </a>\r\n                            </div>\r\n                        </div> */}\r\n                        {/* Sidebar Menu */}\r\n\r\n\r\n\r\n                        <nav className=\"mt-2\">\r\n                            <ul\r\n                                className=\"nav nav-pills nav-sidebar flex-column\"\r\n                                data-widget=\"treeview\"\r\n                                role=\"menu\"\r\n                                data-accordion=\"false\"\r\n                            >\r\n                                <li className=\"nav-item\">\r\n                                    <Link to=\"/Users/\" className=\"nav-link\">\r\n                                        <i className=\"nav-icon fas fa-th\" />\r\n                                        <p>Users</p>\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link to=\"/AddUser/\" className=\"nav-link\">\r\n                                        <i className=\"nav-icon fas fa-th\" />\r\n                                        <p>Add Users</p>\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"nav-item has-treeview\">\r\n                                    <Link to=\"#\" className=\"nav-link\">\r\n                                        <i className=\"nav-icon fas fa-copy\" />\r\n                                        <p>\r\n                                            Layout Options\r\n                                               <i className=\"fas fa-angle-left right\" />\r\n                                        </p>\r\n                                    </Link>\r\n                                    <ul className=\"nav nav-treeview\">\r\n                                        <li className=\"nav-item\">\r\n                                            <a href=\"pages/layout/top-nav.html\" className=\"nav-link\">\r\n                                                <i className=\"far fa-circle nav-icon\" />\r\n                                                <p>Top Navigation</p>\r\n                                            </a>\r\n                                        </li>\r\n\r\n                                        <li className=\"nav-item\">\r\n                                            <a\r\n                                                href=\"pages/layout/collapsed-sidebar.html\"\r\n                                                className=\"nav-link\"\r\n                                            >\r\n                                                <i className=\"far fa-circle nav-icon\" />\r\n                                                <p>Collapsed Sidebar</p>\r\n                                            </a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li className=\"nav-header\">LABELS</li>\r\n                                <li className=\"nav-item\">\r\n                                    <a href=\"#\" className=\"nav-link\">\r\n                                        <i className=\"nav-icon far fa-circle text-danger\" />\r\n                                        <p className=\"text\">Important</p>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a href=\"#\" className=\"nav-link\">\r\n                                        <i className=\"nav-icon far fa-circle text-warning\" />\r\n                                        <p>Warning</p>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a href=\"#\" className=\"nav-link\">\r\n                                        <i className=\"nav-icon far fa-circle text-info\" />\r\n                                        <p>Informational</p>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </nav>\r\n\r\n\r\n                        {/* /.sidebar-menu */}\r\n                    </div>\r\n                    {/* /.sidebar */}\r\n                </aside>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst toast = MySwal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default MySwal;","import axios from \"axios\";\r\n//import environment from '../../environments/environment';\r\n\r\n//const roadmapApiUrl = 'http://10.39.180.230/TrafficSystemSpeedMapAPI/api/v1/roadmap';\r\n//const roadmapApiUrl = 'http://192.168.128.119/TrafficSystemSpeedMapAPI/api/v1/roadmap';\r\nconst ApiUrl = 'http://10.39.181.74/dailyworkApi/api/v1/user';\r\nconst options = {\r\n    headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n    }\r\n};\r\nexport default {\r\n\r\n    UserSave(url = ApiUrl) {\r\n        return {\r\n            Save: (data) => axios.post(url, JSON.stringify(data), options)\r\n                .then((res) => {\r\n                    //console.log(res);\r\n                    return res;\r\n                },\r\n                    (error) => {\r\n                        // console.log(error);\r\n                        return error;\r\n                    }\r\n                )\r\n        }\r\n    },\r\n    CheckUserExist(url = ApiUrl) {\r\n        return {\r\n            checkUserid: (Userid) => axios.get(url + '/Getuser/', {\r\n                params: { \"userid\": Userid }\r\n            })\r\n                .then((res) => {\r\n                    //console.log(res);\r\n                    return res;\r\n                },\r\n                    (error) => {\r\n                        // console.log(error);\r\n                        return error;\r\n                    }\r\n                )\r\n        }\r\n    }\r\n    ,\r\n    FetchUsers(url = ApiUrl) {\r\n        return {\r\n            GetAllUsers: () => axios.get(url, options)\r\n                .then((res) => {\r\n                    //console.log(res);\r\n                    return res;\r\n                },\r\n                    (error) => {\r\n                        // console.log(error);\r\n                        return error;\r\n                    }\r\n                )\r\n        }\r\n    }\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport MySwal from '../common/Sweetalert/SweetAlert';\r\nimport UserService from '../../services/UserService';\r\nimport \"../../styles.css\";\r\n\r\n// disable all types of zoom on page.\r\n\r\n// window.addEventListener('wheel', e => {\r\n//     e.preventDefault();\r\n// }, { passive: false });\r\n\r\n// Messages\r\nconst required = \"This field is required\";\r\nconst maxLength = \"Your input exceed maximum length\";\r\nconst minLength = \"Your input must be minimum length\";\r\nconst invalidUserid = \"Userid already exists\";\r\n\r\nconst errorMessage = (error) => {\r\n    return <div className=\"invalid-feedback\">{error}</div>;\r\n};\r\n\r\nexport default function UserForm() {\r\n\r\n    const [isValidUser, SetIsValidUser] = useState('');\r\n    const { register, handleSubmit, reset, watch, setFocus, clearErrors, setError, getValues, formState: { errors, isValid, isDirty } } = useForm();\r\n\r\n    const onSubmit = async (data) => {\r\n\r\n        console.warn(\"Form Data : \", data);\r\n        console.warn(\"Form Error : \", errors);\r\n        if (isValidUser !== 'N') {\r\n\r\n            const result = await UserService.UserSave().Save(data);\r\n            if (result.status === 200) {\r\n                ResetForm();\r\n                console.log(\"User Saved Successfully\");\r\n                MySwal.fire(\r\n                    'User Saved!',\r\n                    'User Saved Successfully!',\r\n                    'success'\r\n                )\r\n            }\r\n            else {\r\n                MySwal.fire(\r\n                    'Error Occured!',\r\n                    result,\r\n                    'error'\r\n                )\r\n                setFocus(\"Userid\");\r\n            }\r\n        }\r\n        else {\r\n            setError(\"Userid\");\r\n        }\r\n    }\r\n    const onErrors = (errors) => {\r\n        console.error(errors);\r\n    }\r\n\r\n    const checkUser = async (e) => {\r\n        const _Userid = e.target.value;\r\n        const result = await UserService.CheckUserExist().checkUserid(_Userid);\r\n        // console.log(result);\r\n        if (result.status === 200) {\r\n            setError(\"Userid\");\r\n            SetIsValidUser('N');\r\n            console.log(\"User exists\");\r\n        }\r\n        else {\r\n            SetIsValidUser('');\r\n            console.log(\"New User\");\r\n        }\r\n    }\r\n    const Passwordref = useRef({});\r\n    Passwordref.current = watch(\"Password\", \"\");\r\n\r\n    useEffect(() => {\r\n        setFocus(\"Userid\");\r\n    }, [setFocus])\r\n\r\n\r\n    const ResetForm = () => {\r\n        setFocus(\"Userid\");\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper\">\r\n                {/* Content Header (Page header) */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0 text-dark\">Users</h1>\r\n                            </div>\r\n                            {/* /.col */}\r\n                            <div className=\"col-sm-6\">\r\n                                <ol className=\"breadcrumb float-sm-right\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"#\">Home</a>\r\n                                    </li>\r\n                                    <li className=\"breadcrumb-item active\">Users</li>\r\n                                </ol>\r\n                            </div>\r\n                            {/* /.col */}\r\n                        </div>\r\n                        {/* /.row */}\r\n                    </div>\r\n                    {/* /.container-fluid */}\r\n                </div>\r\n                {/* /.content-header */}\r\n                {/* Main content */}\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"card card-info\">\r\n\r\n                                <div className=\"card-header\">\r\n                                    <div className=\"card-title\">User Form</div>\r\n                                </div>\r\n                                <form onSubmit={handleSubmit(onSubmit, onErrors)}>\r\n                                    <div className=\"row\">\r\n\r\n                                        <div className=\"card-body\">\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label for=\"Userid\">User Name</label>\r\n                                                <input type=\"text\" className={`form-control ${errors.Userid ? 'is-invalid' : ''}`} placeholder=\"Enter Userid\"\r\n                                                    {...register('Userid', { required: true, maxLength: 20 })}\r\n                                                    // onBlur={checkUserid}\r\n                                                    onChange={checkUser}\r\n                                                />\r\n                                                {errors.Userid &&\r\n                                                    errors.Userid.type === \"required\" &&\r\n                                                    errorMessage(required)}\r\n                                                {errors.Userid &&\r\n                                                    errors.Userid.type === \"maxLength\" &&\r\n                                                    errorMessage(maxLength)}\r\n                                                {isValidUser &&\r\n                                                    errorMessage(invalidUserid)}\r\n                                            </div>\r\n\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label for=\"Password\">Password</label>\r\n                                                        <input type=\"password\" className={`form-control ${errors.Password ? 'is-invalid' : ''}`} placeholder=\"Enter Password\"\r\n                                                            {...register('Password', { required: true, minLength: 4, maxLength: 12 })} />\r\n                                                        {errors.Password &&\r\n                                                            errors.Password.type === \"required\" &&\r\n                                                            errorMessage(required)}\r\n                                                        {errors.Password &&\r\n                                                            errors.Password.type === \"minLength\" &&\r\n                                                            errorMessage(minLength)}\r\n                                                        {errors.Password &&\r\n                                                            errors.Password.type === \"maxLength\" &&\r\n                                                            errorMessage(maxLength)}\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label for=\"FullName\">Full Name</label>\r\n\r\n                                                        <input type=\"text\" className={`form-control ${errors.FullName ? 'is-invalid' : ''}`} placeholder=\"Enter FullName\"\r\n                                                            {...register('FullName', { required: true })} />\r\n                                                        {errors.FullName &&\r\n                                                            errors.FullName.type === \"required\" &&\r\n                                                            errorMessage(required)}\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label for=\"ContactNo\">Contact Number</label>\r\n\r\n                                                        <input type=\"tel\" className={`form-control ${errors.ContactNo ? 'is-invalid' : ''}`} placeholder=\"Enter Contact Number\"\r\n                                                            {...register('ContactNo', { required: true })} />\r\n\r\n                                                        {errors.ContactNo &&\r\n                                                            errors.ContactNo.type === \"required\" &&\r\n                                                            errorMessage(required)}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label for=\"ConfirmPassword\">\r\n                                                            Confirm Password\r\n                                                </label>\r\n\r\n                                                        <input type=\"password\" className={`form-control ${errors.ConfirmPassword ? 'is-invalid' : ''}`} placeholder=\"Enter ConfirmPassword\"\r\n                                                            {...register('ConfirmPassword', {\r\n                                                                required: true,\r\n                                                                validate: value => value === Passwordref.current || \"The passwords do not match\"\r\n                                                            })} skip />\r\n\r\n                                                        {errors.ConfirmPassword &&\r\n                                                            errors.ConfirmPassword.type === \"required\" &&\r\n                                                            errorMessage(required)}\r\n                                                        {errors.ConfirmPassword && errorMessage(errors.ConfirmPassword.message)}\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group\">\r\n                                                        <label for=\"Email\">Email</label>\r\n\r\n                                                        <input type=\"email\" className={`form-control ${errors.Email ? 'is-invalid' : ''}`} placeholder=\"Enter Email\"\r\n                                                            {...register('Email', { required: true })} />\r\n\r\n                                                        {errors.Email &&\r\n                                                            errors.Email.type === \"required\" &&\r\n                                                            errorMessage(required)}\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label for=\"txtCountry\">Country</label>\r\n\r\n                                                        <input type=\"text\" className={`form-control ${errors.Country ? 'is-invalid' : ''}`} placeholder=\"Enter Country\"\r\n                                                            {...register('Country', { required: true })} />\r\n\r\n                                                        {errors.Country &&\r\n                                                            errors.Country.type === \"required\" &&\r\n                                                            errorMessage(required)}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card-footer\">\r\n                                        <button type=\"reset\" onClick={ResetForm} className=\"btn btn-info float-right  ml-2  \">  <i class=\"fas fa-retweet\"></i> Cancel</button>\r\n                                        <button type=\"submit\" className=\"btn btn-info float-right \"> <i class=\"far fa-save\"></i> Save</button>\r\n\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* /.container-fluid */}\r\n                </section>\r\n                {/* /.content */}\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport UserService from '../../services/UserService'\r\n\r\n\r\nexport default function UserHome() {\r\n\r\n    const [users, setUsers] = useState(null);\r\n\r\n    const deleteUser = (id) => {\r\n        console.log('Delete called' + id);\r\n    }\r\n    useEffect(() => {\r\n\r\n        async function fetchData() {\r\n            // You can await here\r\n            const response = await UserService.FetchUsers().GetAllUsers().then(x => setUsers(x.data));\r\n            //  console.warn('all user data :- ', response.data);\r\n            //setUsers({ users: response.data });\r\n\r\n        }\r\n        fetchData();\r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    //console.warn('data :- ', users);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper\">\r\n                {/* Content Header (Page header) */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0 text-dark\">Users</h1>\r\n                                <a href=\"/users/UserForm\" className=\"btn btn-sm btn-success mb-2\">Add User</a>\r\n                            </div>\r\n                            {/* /.col */}\r\n                            <div className=\"col-sm-6\">\r\n                                <ol className=\"breadcrumb float-sm-right\">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <a href=\"#\">Home</a>\r\n                                    </li>\r\n                                    <li className=\"breadcrumb-item active\">Users</li>\r\n                                </ol>\r\n                            </div>\r\n                            {/* /.col */}\r\n                        </div>\r\n                        {/* /.row */}\r\n                    </div>\r\n                    {/* /.container-fluid */}\r\n                </div>\r\n                {/* /.content-header */}\r\n                {/* Main content */}\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"card card-info\">\r\n\r\n\r\n                                <table className=\"table table-striped\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th style={{ width: '18%' }}>User Id</th>\r\n                                            <th style={{ width: '18%' }}>Email</th>\r\n                                            <th style={{ width: '18%' }}>FullName</th>\r\n                                            <th style={{ width: '18%' }}>Contact#</th>\r\n                                            <th style={{ width: '18%' }}>Country</th>\r\n                                            <th style={{ width: '10%' }}></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n\r\n                                        {users && users.map(user =>\r\n                                            <tr key={user.userid}>\r\n                                                <td>{user.userid}  </td>\r\n                                                <td>{user.email}</td>\r\n                                                <td>{user.fullName}</td>\r\n                                                <td>{user.contactNo}</td>\r\n                                                <td>{user.country}</td>\r\n                                                <td style={{ whiteSpace: 'nowrap' }}>\r\n                                                    <a href={`/users/edit/${user.userid}`} className=\"btn btn-sm btn-primary mr-1\">Edit</a>\r\n                                                    <button onClick={() => deleteUser(user.userid)} className=\"btn btn-sm btn-danger btn-delete-user\" disabled={user.isDeleting}>\r\n                                                        {user.isDeleting\r\n                                                            ? <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                                            : <span>Delete</span>\r\n                                                        }\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                        {!users &&\r\n                                            <tr>\r\n                                                <td colSpan=\"4\" className=\"text-center\">\r\n                                                    <div className=\"spinner-border spinner-border-lg align-center\"></div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        }\r\n                                        {users && !users.length &&\r\n                                            <tr>\r\n                                                <td colSpan=\"4\" className=\"text-center\">\r\n                                                    <div className=\"p-2\">No Users To Display</div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        }\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import ClientProfile from \"./components/ClientProfile\";\nimport Dashboard from \"./components/Dashboard\";\nimport Footer from \"./components/layout/Footer\";\nimport Header from \"./components/layout/Header\";\nimport Menu from \"./components/layout/Menu\";\nimport UserForm from \"./components/Users/UserForm\";\nimport UserHome from \"./components/Users/UserHome\";\n//import Users from \"./components/Users\";\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n\n\n\n    <div className=\"wrapper\">\n      <BrowserRouter>\n        <Header />\n        <Menu />\n        {/* <Users /> */}\n        {/* <ClientProfile /> */}\n        {/* <UserForm /> */}\n        {/* <UserHome /> */}\n\n        <Switch>\n          <Route exact path=\"/\">\n            <UserHome />\n          </Route>\n          <Route exact path=\"/Users\">\n            <UserHome />\n          </Route>\n          <Route exact path=\"/AddUser\">\n            <UserForm />\n          </Route>\n        </Switch>\n\n        <Footer />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}